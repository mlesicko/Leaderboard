{:rename-macros {}, :renames {}, :use-macros {includes? clojure.string}, :excludes #{}, :name leaderboard.test-name, :imports nil, :requires {string superstring.core, superstring.core superstring.core, string2 cuerdas.core, cuerdas.core cuerdas.core, clojure.string clojure.string}, :cljs.spec/speced-vars [], :uses {includes? clojure.string}, :defs {check-for-substrings {:protocol-inline nil, :meta {:file "/home/captain/Development/Leaderboard/src/cljs/leaderboard/test-name.cljs", :line 6, :column 7, :end-line 6, :end-column 27, :arglists (quote ([string substrings]))}, :name leaderboard.test-name/check-for-substrings, :variadic false, :file "src/cljs/leaderboard/test-name.cljs", :end-column 27, :method-params ([string substrings]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 2, :fn-var true, :arglists (quote ([string substrings]))}, naughty {:name leaderboard.test-name/naughty, :file "src/cljs/leaderboard/test-name.cljs", :line 97, :column 1, :end-line 97, :end-column 13, :meta {:file "/home/captain/Development/Leaderboard/src/cljs/leaderboard/test-name.cljs", :line 97, :column 6, :end-line 97, :end-column 13}, :tag cljs.core/ISet}, is-alphabetical? {:protocol-inline nil, :meta {:file "/home/captain/Development/Leaderboard/src/cljs/leaderboard/test-name.cljs", :line 56, :column 7, :end-line 56, :end-column 23, :arglists (quote ([user-name]))}, :name leaderboard.test-name/is-alphabetical?, :variadic false, :file "src/cljs/leaderboard/test-name.cljs", :end-column 23, :method-params ([user-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 1, :fn-var true, :arglists (quote ([user-name]))}, presidents {:name leaderboard.test-name/presidents, :file "src/cljs/leaderboard/test-name.cljs", :line 128, :column 1, :end-line 128, :end-column 16, :meta {:file "/home/captain/Development/Leaderboard/src/cljs/leaderboard/test-name.cljs", :line 128, :column 6, :end-line 128, :end-column 16}, :tag cljs.core/ISet}, emo {:name leaderboard.test-name/emo, :file "src/cljs/leaderboard/test-name.cljs", :line 112, :column 1, :end-line 112, :end-column 9, :meta {:file "/home/captain/Development/Leaderboard/src/cljs/leaderboard/test-name.cljs", :line 112, :column 6, :end-line 112, :end-column 9}, :tag cljs.core/ISet}, disney {:name leaderboard.test-name/disney, :file "src/cljs/leaderboard/test-name.cljs", :line 108, :column 1, :end-line 108, :end-column 12, :meta {:file "/home/captain/Development/Leaderboard/src/cljs/leaderboard/test-name.cljs", :line 108, :column 6, :end-line 108, :end-column 12}, :tag cljs.core/ISet}, check-for-swear {:protocol-inline nil, :meta {:file "/home/captain/Development/Leaderboard/src/cljs/leaderboard/test-name.cljs", :line 60, :column 7, :end-line 60, :end-column 22, :arglists (quote ([user-name swear]))}, :name leaderboard.test-name/check-for-swear, :variadic false, :file "src/cljs/leaderboard/test-name.cljs", :end-column 22, :method-params ([user-name swear]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 2, :fn-var true, :arglists (quote ([user-name swear]))}, vowels {:name leaderboard.test-name/vowels, :file "src/cljs/leaderboard/test-name.cljs", :line 82, :column 1, :end-line 82, :end-column 12, :meta {:file "/home/captain/Development/Leaderboard/src/cljs/leaderboard/test-name.cljs", :line 82, :column 6, :end-line 82, :end-column 12}, :tag cljs.core/ISet}, digits {:name leaderboard.test-name/digits, :file "src/cljs/leaderboard/test-name.cljs", :line 70, :column 1, :end-line 70, :end-column 12, :meta {:file "/home/captain/Development/Leaderboard/src/cljs/leaderboard/test-name.cljs", :line 70, :column 6, :end-line 70, :end-column 12}, :tag cljs.core/ISet}, colors {:name leaderboard.test-name/colors, :file "src/cljs/leaderboard/test-name.cljs", :line 118, :column 1, :end-line 118, :end-column 12, :meta {:file "/home/captain/Development/Leaderboard/src/cljs/leaderboard/test-name.cljs", :line 118, :column 6, :end-line 118, :end-column 12}, :tag cljs.core/ISet}, check-for-swears {:protocol-inline nil, :meta {:file "/home/captain/Development/Leaderboard/src/cljs/leaderboard/test-name.cljs", :line 65, :column 7, :end-line 65, :end-column 23, :arglists (quote ([user-name swears]))}, :name leaderboard.test-name/check-for-swears, :variadic false, :file "src/cljs/leaderboard/test-name.cljs", :end-column 23, :method-params ([user-name swears]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 2, :fn-var true, :arglists (quote ([user-name swears]))}, length {:name leaderboard.test-name/length, :file "src/cljs/leaderboard/test-name.cljs", :line 21, :column 1, :end-line 21, :end-column 12, :meta {:file "/home/captain/Development/Leaderboard/src/cljs/leaderboard/test-name.cljs", :line 21, :column 6, :end-line 21, :end-column 12}, :tag number}, swears {:name leaderboard.test-name/swears, :file "src/cljs/leaderboard/test-name.cljs", :line 89, :column 1, :end-line 89, :end-column 12, :meta {:file "/home/captain/Development/Leaderboard/src/cljs/leaderboard/test-name.cljs", :line 89, :column 6, :end-line 89, :end-column 12}, :tag cljs.core/ISet}, test-name {:protocol-inline nil, :meta {:file "/home/captain/Development/Leaderboard/src/cljs/leaderboard/test-name.cljs", :line 23, :column 7, :end-line 23, :end-column 16, :arglists (quote ([user-name]))}, :name leaderboard.test-name/test-name, :variadic false, :file "src/cljs/leaderboard/test-name.cljs", :end-column 16, :method-params ([user-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([user-name]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:else}, :order [:else]}, :doc nil}